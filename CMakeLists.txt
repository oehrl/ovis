cmake_minimum_required(VERSION 3.12)
project(ovis)

if (${CMAKE_CXX_COMPILER} MATCHES "emscripten")
  set(OVIS_EMSCRIPTEN TRUE)
  # set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -s USE_SDL=2 -g4 -s DEMANGLE_SUPPORT=1 -s ASSERTIONS=1 -s WASM=0 -s TOTAL_MEMORY=536870912")  
else()
  set(OVIS_EMSCRIPTEN FALSE)
endif()

add_subdirectory(extern)

# if ("${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang")
#     #set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -Wpedantic -fno-rtti")
#     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++1z -Wall -Wextra -Wpedantic -Werror")
# elseif ("${CMAKE_CXX_COMPILER_ID}" MATCHES "GNU")
#     #set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -Wpedantic -fno-rtti")
#     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14")
# elseif ("${CMAKE_CXX_COMPILER_ID}" MATCHES "Intel")
#     # using Intel C++
# elseif ("${CMAKE_CXX_COMPILER_ID}" MATCHES "MSVC")
#     set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /MP /W4 /W4")
#     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP /W4")
#     set(CMAKE_STATIC_LINKER_FLAGS "${CMAKE_STATIC_LINKER_FLAGS} /ignore:4221")
# endif()

if (OVIS_EMSCRIPTEN)
  add_definitions("-DOVIS_EMSCRIPTEN=1")
endif()
set(OVIS_ROOT ${CMAKE_CURRENT_SOURCE_DIR})
add_subdirectory(ovis)